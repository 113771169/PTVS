<Project>
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
  </PropertyGroup>
  <Import Project="..\..\NetStandard.settings" />
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <ItemGroup>
    <ProjectReference Include="..\..\Analysis\AnalysisNetStandard.csproj" />
    <ProjectReference Include="..\AnalysisVsc\AnalysisVsc.csproj" />
  </ItemGroup>
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
  <ItemGroup>
    <PackageReference Include="MicroBuild.Core" Version="0.2.0" />
  </ItemGroup>
  <!-- .NET Core publishing -->
  <PropertyGroup>
    <AnalysisEngineName>python-analysis</AnalysisEngineName>
    <DotNetPublish>true</DotNetPublish>
    <BaseZipName>$(DotNetPublishPathZipPath)$(AnalysisEngineName)</BaseZipName>
  </PropertyGroup>
  <ItemGroup>
    <TargetOS Include="win-x86" />
    <TargetOS Include="win-x64" />
    <TargetOS Include="osx-x64" />
    <TargetOS Include="linux-x64" />
  </ItemGroup>
  <ItemGroup>
    <MySourceFiles Include="$(OutputPath)Microsoft.Python.Analysis.Engine.dll" />
  </ItemGroup>
  <Target Name="AfterBuild">
    <Exec Command="dotnet publish --no-restore ..\AnalysisVsc\AnalysisVsc.csproj -c $(Configuration) -r %(TargetOS.Identity) /p:DotNetPublish=1" />
    <!-- Copy over signed binaries to the target since .NET MSBuild does not support MS Signing -->
    <Exec Command="copy $(OutputPath)Microsoft.Python.Analysis.Engine.dll $(DotNetPublishPath)%(TargetOS.Identity)\publish" />
    <Exec Command="copy $(OutputPath)Microsoft.PythonTools.VsCode.dll $(DotNetPublishPath)%(TargetOS.Identity)\publish" />
    <Exec Command="md $(DotNetPublishPathZipPath)" ContinueOnError="true" />
    <ZipDir ZipFileName="$(BaseZipName)-%(TargetOS.Identity).zip" DirectoryName="$(DotNetPublishPath)%(TargetOS.Identity)\publish" />
  </Target>

  <!-- Zipping -->
  <UsingTask TaskName="ZipDir" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <ZipFileName ParameterType="System.String" Required="true" />
      <DirectoryName ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.IO" />
      <Reference Include="System.IO.Compression.FileSystem" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.IO.Compression" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              try {
                  Log.LogMessage(string.Format("Zipping Directory {0} to {1}", DirectoryName, ZipFileName));
                  try { File.Delete(ZipFileName); } catch { }
                  ZipFile.CreateFromDirectory(DirectoryName, ZipFileName);
                  return true;
              } catch(Exception ex) {
                  Log.LogErrorFromException(ex);
                  return false;
              }
        ]]>
      </Code>
    </Task>
  </UsingTask>
  <ItemGroup>
    <FilesToSign Include="$(BaseZipName)-win-x86.zip">
      <Authenticode>VsixSHA2</Authenticode>
    </FilesToSign>
    <FilesToSign Include="$(BaseZipName)-win-x64.zip">
      <Authenticode>VsixSHA2</Authenticode>
    </FilesToSign>
    <FilesToSign Include="$(BaseZipName)-osx-x64.zip">
      <Authenticode>VsixSHA2</Authenticode>
    </FilesToSign>
    <FilesToSign Include="$(BaseZipName)-linux-x64.zip">
      <Authenticode>VsixSHA2</Authenticode>
    </FilesToSign>
  </ItemGroup>
</Project>