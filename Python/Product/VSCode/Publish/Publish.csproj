<Project>
  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
  </PropertyGroup>
  <Import Project="..\..\NetStandard.settings" />
  <PropertyGroup>
    <NugetVersion>0.1.0</NugetVersion>
    <!-- Override build output during dotnet publish so it goes into a separate folder and does not stomp over signed assemblies -->
    <DotNetPublishPath Condition="'$(DotNetPublishPath)' == ''">$(BuildOutputRoot)publish\</DotNetPublishPath>
    <DotNetPublishNugetPath Condition="'$(DotNetPublishPathZip)' == ''">$(BuildOutputRoot)\raw\nuget\</DotNetPublishNugetPath>
    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
    <NugetExe Condition="$(OS) == 'Windows_NT'">$(NuGetPackageRoot)NuGet.CommandLine\4.5.1\tools\nuget.exe</NugetExe>
    <NugetExe Condition="$(OS) != 'Windows_NT'">nuget</NugetExe>
  </PropertyGroup>
  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />
  <ItemGroup>
    <ProjectReference Include="..\..\Analysis\AnalysisNetStandard.csproj" />
    <ProjectReference Include="..\AnalysisVsc\AnalysisVsc.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="MicroBuild.Core" Version="0.2.0" />
    <PackageReference Include="Nuget.CommandLine" Version="4.5.1" />
  </ItemGroup>
  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />
  <!-- .NET Core publishing -->
  <PropertyGroup>
    <AnalysisEngineName>python-analysis</AnalysisEngineName>
    <NugetPackageName>python-analysis-vscode</NugetPackageName>
    <DotNetPublish>true</DotNetPublish>
  </PropertyGroup>
  <ItemGroup>
    <TargetOS Include="win-x86" />
    <TargetOS Include="win-x64" />
    <TargetOS Include="osx-x64" />
    <TargetOS Include="linux-x64" />
  </ItemGroup>
  <ItemGroup>  
    <EngineFiles Include="$(OutputPath)Microsoft.Python.Analysis.Engine.dll;$(OutputPath)Microsoft.PythonTools.VsCode.dll" />  
    <NuspecSourceFiles Include="$(OutputPath)$(NugetPackageName).nuspec" />  
  </ItemGroup>
  <Target Name="AfterBuild">
    <Exec Command="dotnet publish --no-restore ..\AnalysisVsc\AnalysisVsc.csproj -c $(Configuration) -r %(TargetOS.Identity) /p:OutputPath=$(DotNetPublishPath)%(TargetOS.Identity) /p:DotNetPublish=1" />
    <!-- Copy over signed binaries to the target since .NET MSBuild does not support MS Signing -->
    <Copy SourceFiles="@(EngineFiles)" DestinationFolder="$(DotNetPublishPath)%(TargetOS.Identity)" />
    <Exec Command="mkdir $(DotNetPublishNugetPath)" ContinueOnError="true" />
    <!-- Copy nuspec to platform folders -->
    <Copy SourceFiles="@(NuspecSourceFiles)" DestinationFolder="$(DotNetPublishPath)%(TargetOS.Identity)" />
     <Exec Command="$(NugetExe) pack $(DotNetPublishPath)%(TargetOS.Identity)\$(NugetPackageName).nuspec -OutputDirectory $(DotNetPublishNugetPath)%(TargetOS.Identity) -Version $(NugetVersion) -NoPackageAnalysis" />
  </Target>
  <ItemGroup Condition="$(SignType) == 'real'">
    <FilesToSign Include="$(DotNetPublishNugetPath)\win-x86\$(NugetPackageName).$(NugetVersion).nupkg">
      <Authenticode>Microsoft</Authenticode>
    </FilesToSign>
    <FilesToSign Include="$(DotNetPublishNugetPath)\win-x64\$(NugetPackageName).$(NugetVersion).nupkg">
      <Authenticode>Microsoft</Authenticode>
    </FilesToSign>
    <FilesToSign Include="$(DotNetPublishNugetPath)\osx-x64\$(NugetPackageName).$(NugetVersion).nupkg">
      <Authenticode>Microsoft</Authenticode>
    </FilesToSign>
    <FilesToSign Include="$(DotNetPublishNugetPath)\linux-x64\$(NugetPackageName).$(NugetVersion).nupkg">
      <Authenticode>Microsoft</Authenticode>
    </FilesToSign>
  </ItemGroup>
</Project>